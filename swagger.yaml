openapi: 3.0.0
info:
  title: KANDY API
  description: KANDY ORCHESTRATION LAYER [KOL](https://github.com/Fring/KOL).
  version: 1.3
servers:
  - url: http://api-de.kandy.io/v1.3
    description: Optional server description, e.g. Main EU (production) server
  - url: http://api.kandycn.com/v1.3
    description: Optional server description, e.g. Main CHINA (production) server
  - url: http://api-apac.kandy.io/v1.3
    description: Optional server description, e.g. Main ASIA (production) server
  - url: http://api-apac.kandy.io/prp/v1.3
    description: Optional server description, e.g. Main ASIA (test) server
tags:
- name: Admins
  description: Admin Level Request (adminRequestHandler) /v1.3/admins
- name: Accounts
  description: Acoounts Level Request (accountRequestHandler) /v1.3/accounts
- name: Domains
  description: Domains Level Request (domainRequestHandler) /v1.3/domains/
- name: Users
  description: Users Level Request (userRequestHandler) /v1.3/users
- name: Devices
  description: Devices Level Request (deviceRequestHandler) /v1.3/devices             
paths:
  #--------- Accounts ------------  
  /accounts/accessTokens:
    get:
      tags:
      - Accounts  
      summary: GetAccountAccessTokenRequest
      parameters:
        - $ref: '#/parameters/AAK'
        - $ref: '#/parameters/AAS'
  /accounts/domains:
    get:
      tags:
      - Accounts  
      summary: GetDomainListRequest
      parameters:
      - $ref: '#/parameters/AAT'
    post:
      tags:
      - Accounts  
      summary: RegisterDomainRequest
      parameters:
        - $ref: '#/parameters/AAT'
        - $ref: '#/parameters/DomainName'
    delete:
      tags:
      - Accounts  
      summary: UnregisterDomainRequest
      parameters:
        - $ref: '#/parameters/AAT'
        - $ref: '#/parameters/DAK'
  /accounts/domains/status:
    post:
      tags:
      - Accounts  
      summary: ChangeDomainStatusRequest
      parameters:
        - $ref: '#/parameters/DAK'
        - name: domain_status
          in: query
          required: true
          description: Domain Status (&domain_status=)
          schema:
            type : string
            minimum: 1
    get:
      tags:
      - Accounts  
      summary: GetDomainStatusRequest
      parameters:
        - $ref: '#/parameters/AAT'
        - $ref: '#/parameters/DAK'
  /accounts/domains/status/all:
    get:
      tags:
      - Accounts  
      summary: GetDomainsStatusListRequest
      parameters:
        - $ref: '#/parameters/AAT'
  /accounts/domains/details:
    get:
      tags:
      - Accounts  
      summary: GetDomainDetailsRequest
      parameters:
        - name: key (JUST DOMAIN ACCESS TOKEN)
          in: query
          required: true
          description: Domain Access Token (?key=)
          schema:
            type : string
            minimum: 1
        - name: key (JUST DOMAIN API KEY)
          in: query
          required: true
          description: Domain Api Key (?key=)
          schema:
            type : string
            minimum: 1
  /accounts/domains/accessTokens:
    delete:
      tags:
      - Accounts  
      summary: RevokeDomainAccessTokenRequest
      parameters:
        - $ref: '#/parameters/DAT'
  /accounts/domains/exists/experius:
    get:
      tags:
      - Accounts  
      summary: CheckDomainNameInExperiusRequest
      parameters:
         - $ref: '#/parameters/DomainName'
  /accounts/domain/users/anonymous:
    post:
      tags:
      - Accounts  
      summary: AddAnonUserToDomainRequest
      parameters:
        - name: key
          in: query
          required: true
          description: Domain Access Token (?key=)
          schema:
            type : string
            minimum: 1
  /accounts/billing/credit_cards:
    get:
      tags:
      - Accounts  
      summary: GetCreditCardDetailsRequest
      parameters:
        - $ref: '#/parameters/AAT'
    post:
      tags:
      - Accounts  
      summary: SetCreditCardDetailsRequest
      parameters:
        - $ref: '#/parameters/AAT'
        - name: credit_cards
          in: query
          required: true
          description: Credit Cards (&credit_cards=)
          schema:
            type : string
            minimum: 1
  /accounts/configurations:
    post:
      tags:
      - Accounts  
      summary: SetAccountConfigurationRequest
      parameters:
        - $ref: '#/parameters/AAT'
        - name: account_configuration
          in: query
          required: true
          description: Account Configuration (&account_configuration=)
          schema:
            type : string
            minimum: 1
  /accounts/configurations/configuration:
    get:
      tags:
      - Accounts  
      summary: GetAccountConfigurationRequest
      parameters:
        - $ref: '#/parameters/AAT'
        #----------------Domains Level ----------------- 
  /domains/users:
    get:
      tags:
      - Domains  
      summary: GetUserListRequest
      parameters:
        - $ref: '#/parameters/DATKey'
    delete:
      tags:
      - Domains  
      summary: UnregisterUserRequest
      parameters:
        - $ref: '#/parameters/DATKey'
        - $ref: '#/parameters/UAK'        
  /domains/users/phone_number:
    post:
      tags:
      - Domains  
      summary: RegisterUserByPhoneNumberRequest
      parameters:
        - $ref: '#/parameters/DATKey'
        - name: user_phone_number
          in: query
          required: true
          description: User Phone Number (&user_phone_number=)
          schema:
            type : string
            minimum: 1 
        - name: user_country_code
          in: query
          required: true
          description: User Country Code (&user_country_code=)
          schema:
            type : string
            minimum: 1 
  /domains/users/user_id:
    post:
      tags:
      - Domains  
      summary: RegisterUserByUserIdRequest
      parameters:
        - $ref: '#/parameters/DATKey'
        - name: user_id
          in: query
          required: true
          description: User Id (&user_id=)
          schema:
            type : string
            minimum: 1 
  /domains/users/details:
    get:
      tags:
      - Domains  
      summary: GetUserDetailsRequest
      parameters:
        - name: user_access_token
          in: query
          required: true
          description: User Access Token (&user_access_token=)
          schema:
            type : string
            minimum: 1
  /domains/users/AccessTokens:
    get:
      tags:
      - Domains  
      summary: GetUserAccessTokenRequest
      parameters:
        - $ref: '#/parameters/DAKKey'
        - name: user_id
          in: query
          required: true
          description: User Id (&user_id=)
          schema:
            type : string
            minimum: 1
    delete:
      tags:
      - Domains  
      summary: RevokeUserAccessTokenRequest
      parameters:
        - $ref: '#/parameters/UAT'
        - $ref: '#/parameters/DATKey'
  /domains/users/devices:
    get:
      tags:
      - Domains  
      summary: GetUserDeviceListRequest
      parameters:
        - name: user_name
          in: query
          required: true
          description: User Name (&user_name=)
          schema:
            type : string
            minimum: 1
  /domains/users/permission:
    get:
      tags:
      - Domains  
      summary: GetUserPermissionRequest
      parameters:
        - $ref: '#/parameters/DomainNameName'
        - $ref: '#/parameters/UserId'  
    put:
      tags:
      - Domains  
      summary: UpdateUserPermissionRequest
      parameters:
        - $ref: '#/parameters/DomainNameName'
        - $ref: '#/parameters/UserId'
        - name: actions
          in: query
          required: true
          description: Actions (&actions=)
          schema:
            type : string
            minimum: 1 
    delete:
      tags:
      - Domains  
      summary: DeleteUserPermissionRequest
      parameters:
        - $ref: '#/parameters/DomainNameName' 
        - $ref: '#/parameters/UserId'
        - name: actions
          in: query
          required: true
          description: Actions (&actions=)
          schema:
            type : string
            minimum: 1
  /domains/devices:
    delete:
      tags:
      - Domains  
      summary: UnregisterDeviceRequest
      parameters:
        - $ref: '#/parameters/DomainNameName'
        - $ref: '#/parameters/UserId'
        - $ref: '#/parameters/DeviceId'
  /domains/countrycodes:
    get:
      tags:
      - Domains  
      summary: GetCountryCodeRequest
      parameters:
        - $ref: '#/parameters/DomainNameName'
  /domains/accessTokens:
    get:
      tags:
      - Domains  
      summary: GetDomainAccessTokenRequest
      parameters:
        - $ref: '#/parameters/DAS'
  /domains/details:
    get:
      tags:
      - Domains  
      summary: GetDomainDetailsRequest
      parameters:
        - $ref: '#/parameters/DAKKey'
        - $ref: '#/parameters/DAS'
  /domains/details/limited/access_token:
    get:
      tags:
      - Domains  
      summary: GetLimitedDomainDetailsByAccessTokenRequest
      parameters:
        - $ref: '#/parameters/DATKey' 
  /domains/details/limited/api_key:
    get:
      tags:
      - Domains  
      summary: GetLimitedDomainDetailsByApiKeyRequest
      parameters:
        - $ref: '#/parameters/DAKKey' 
  /domains/configurations/communications/spidr:
    get:
      tags:
      - Domains  
      summary: GetSpidrCommunicationConfigurationRequest
      parameters:
        - $ref: '#/parameters/DATKey'  
  /domains/configurations/push:
    get:
      tags:
      - Domains  
      summary: GetPushConfigurationRequest
      parameters:
        - $ref: '#/parameters/DATKey' 
  /domains/users/locations:
    get:
      tags:
      - Domains  
      summary: GetUsersLocationsListRequest
      parameters:
        - $ref: '#/parameters/DomainName' 
  /domains/users/smblocations:
    get:
      tags:
      - Domains  
      summary: GetUsersSmbLocationsListRequest
      parameters:
        - name: key
          in: query
          required: true
          description: User Access Token (?key=)
          schema:
            type : string
            minimum: 1   
  /domains/users/registrations:
    post:
      tags:
      - Domains  
      summary: UserRegistrationRequest
      parameters:
        - name: key
          in: query
          required: true
          description: User Access Token (?key=)
          schema:
            type : string
            minimum: 1 
        - name: device_native_id
          in: query
          required: true
          description: Device Native Id (&device_native_id=)
          schema:
            type : string
            minimum: 1 
        - name: wifi
          in: query
          required: true
          description: Wifi (&wifi=)
          schema:
            type : string
            minimum: 1                                                                                                                                                                                                                                                                                                       
      #----------- Users Level------------ 
  /users/AccessTokens:
    get:
      tags:
      - Users  
      summary: GetUserAccessTokenRequest
      parameters:
        - $ref: '#/parameters/UAS'
        - $ref: '#/parameters/UserId' 
        - $ref: '#/parameters/DomainName'               
  /users/devices:
    get:
      tags:
      - Users  
      summary: GetDeviceListRequest
      parameters:
        - name: domain_name
          in: query
          required: true
          description: Domain Name (?domain_name=)
          schema:
            type : string
            minimum: 1  
        - name: user_id
          in: query
          required: true
          description: User Id (?user_id=)
          schema:
            type : string
            minimum: 1 
    post:
      tags:
      - Users  
      summary: RegisterDeviceRequest
      parameters:
        - name: user_id
          in: query
          required: true
          description: User Id (?user_id=)
          schema:
            type : string
            minimum: 1 
        - name: domain_name
          in: query
          required: true
          description: Domain Name (&domain_name=)
          schema:
            type : string
            minimum: 1
        - $ref: '#/parameters/DeviceList'
    delete:
      tags:
      - Users  
      summary: UnregisterDeviceRequest
      parameters:
        - $ref: '#/parameters/UATKey'
        - name: domain_name
          in: query
          required: true
          description: Domain Name (&domain_name=)
          schema:
            type : string
            minimum: 1  
        - name: user_id
          in: query
          required: true
          description: User Id (&user_id=)
          schema:
            type : string
            minimum: 1 
        - name: device_id
          in: query
          required: true
          description: Device Id (&device_id=)
          schema:
            type : string
            minimum: 1
  /users/devices/multiple:
    get:
      tags:
      - Users  
      summary: UnregisterMultipleDeviceRequest
      parameters:
        - $ref: '#/parameters/UserId'    
        - $ref: '#/parameters/DomainName'
        - name: type
          in: query
          required: true
          description: Type (&type=)
          schema:
            type : string
            minimum: 1
  /users/devices/details:
    get:
      tags:
      - Users  
      summary: GetDeviceDetailsRequest
      parameters:
        - $ref: '#/parameters/DeviceId'
        - $ref: '#/parameters/DomainName' 
        - $ref: '#/parameters/UserId'
  /users/details/limited:
    get:
      tags:
      - Users  
      summary: GetLimitedUserDetailsRequest
      parameters:
        - name: info
          in: query
          required: true
          description: User Details (&info=)
          schema:
            type : string
            minimum: 1  
  /users/email/send:
    get:
      tags:
      - Users  
      summary: SendEmail
      parameters:  
        - name: email_contact
          in: query
          required: true
          description: Email Contact (?email_contact=)
          schema:
            type : string
            minimum: 1 
        - name: message
          in: query
          required: true
          description: Message (&message=)
          schema:
            type : string
            minimum: 1 
        - name: title
          in: query
          required: true
          description: Title (&title=)
          schema:
            type : string
            minimum: 1 
  /users/report:
    post:
      tags:
      - Users  
      summary: userGeneralReportRequest
      parameters:
        - $ref: '#/parameters/UATKey'
        - $ref: '#/parameters/DeviceId' 
        - name: reportType
          in: query
          required: true
          description: Parameter (&reportType=)
          schema:
            type : string
            minimum: 1 
        - name: clientTimeStamp
          in: query
          required: true
          description: Parameter (&clientTimeStamp=)
          schema:
            type : string
            minimum: 1 
  /users/exists:
    post:
      tags:
      - Users  
      summary: CheckIfUserExistRequest
      parameters:
        - $ref: '#/parameters/UserId' 
        - $ref: '#/parameters/DomainName'                                                                                                                  
          #------------ Devices -------------  
  /devices/addressbooks:
    post:
      tags:
      - Devices  
      summary: UploadDeviceAddressbookRequest
      parameters:
        - $ref: '#/parameters/info'
        - $ref: '#/parameters/DeviceId'
        - name: contacts
          in: query
          required: true
          description: Type (&contats=)
          schema:
            type : string
            minimum: 1 
    get:
      tags:
      - Devices  
      summary: GetDeviceAddressbookRequest
      parameters:
        - $ref: '#/parameters/info'
        - $ref: '#/parameters/DeviceId'
    delete:
      tags:
      - Devices  
      summary: DeleteDeviceAddressbookRequest
      parameters:
        - $ref: '#/parameters/info'
        - $ref: '#/parameters/DeviceId'
  /devices/addressbooks/hints:
    get:
      tags:
      - Devices  
      summary: GetDeviceAddressbookHintsRequest
      parameters:
        - $ref: '#/parameters/info'
        - $ref: '#/parameters/DeviceId'  
  /devices/messages:
    post:
      tags:
      - Devices  
      summary: SendDeviceMessagesRequestV1_2
      parameters:
        - $ref: '#/parameters/DeviceId' 
        - $ref: '#/parameters/message'
    get:
      tags:
      - Devices  
      summary: GetDeviceMessagesRequest
      parameters:
        - $ref: '#/parameters/DeviceId'
        - $ref: '#/parameters/info'
    delete:
      tags:
      - Devices  
      summary: AckDeviceMessagesRequest
      parameters:
        - $ref: '#/parameters/info' 
        - $ref: '#/parameters/DeviceId' 
        - $ref: '#/parameters/message' 
        - name: configuration
          in: query
          required: true
          description: Parameter (&configuration=)
          schema:
            type : string
            minimum: 1                  
  /devices/messages/read:
    post:
      tags:
      - Devices  
      summary: ReadDeviceMessagesRequest
      parameters:
        - $ref: '#/parameters/info' 
        - $ref: '#/parameters/DeviceId'
        - $ref: '#/parameters/message' 
        - name: configuration
          in: query
          required: true
          description: Parameter (&configuration=)
          schema:
            type : string
            minimum: 1    
  /devices/smss:
    post:
      tags:
      - Devices  
      summary: SendDeviceSmsRequest
      parameters:
        - $ref: '#/parameters/info' 
        - name: user_country_code
          in: query
          required: true
          description: Parameter (&user_country_code=)
          schema:
            type : string
            minimum: 1 
        - $ref: '#/parameters/DeviceId'
        - $ref: '#/parameters/message' 
  /devices/smss/out:
    post:
      tags:
      - Devices  
      summary: SendStroredSmsOutRequest
      parameters:
        - $ref: '#/parameters/info'
        - name: user_country_code
          in: query
          required: true
          description: Parameter (&user_country_code=)
          schema:
            type : string
            minimum: 1 
        - name: destination
          in: query
          required: true
          description: Parameter (&destination=)
          schema:
            type : string
            minimum: 1  
        - $ref: '#/parameters/message' 
  /devices/content:
    get:
      tags:
      - Devices  
      summary: downloadFileRequest
      parameters:
        - $ref: '#/parameters/DeviceId'
        - name: content_uuid
          in: query
          required: true
          description: Parameter (&content_uuid=)
          schema:
            type : string
            minimum: 1  
    post:
      tags:
      - Devices  
      summary: uploadFileRequest
      parameters:
        - $ref: '#/parameters/info'
        - name: content_uuid
          in: query
          required: true
          description: Parameter (&content_uuid=)
          schema:
            type : string
            minimum: 1                      
  /devices/content/thumbnail:
    get:
      tags:
      - Devices  
      summary: downloadFileThumbnailRequest
      parameters:
        - $ref: '#/parameters/DeviceId'
        - name: content_uuid
          in: query
          required: true
          description: Parameter (&content_uuid=)
          schema:
            type : string
            minimum: 1
  /devices/credentials/push:
    post:
      tags:
      - Devices  
      summary: SetDevicePushCredentialsRequest
      parameters:
        - $ref: '#/parameters/info'
        - $ref: '#/parameters/DeviceId'
        - name: credentials
          in: query
          required: true
          description: Parameter (&credentials=)
          schema:
            type : string
            minimum: 1         
    get:
      tags:
      - Devices  
      summary: GetDevicePushCredentialsRequest
      parameters:
        - $ref: '#/parameters/info'
        - $ref: '#/parameters/DeviceId' 
    delete:
      tags:
      - Devices  
      summary: DeleteDevicePushCredentialsRequest
      parameters:
        - $ref: '#/parameters/info'
        - $ref: '#/parameters/DeviceId'
        - name: platform
          in: body
          required: true
          description: Platform
          schema:
            type : string
            minimum: 1  
  /devices/location:
    post:
      tags:
      - Devices  
      summary: SetDeviceLocationRequest
      parameters:
        - $ref: '#/parameters/info'
        - $ref: '#/parameters/DeviceId'
        - name: location_status
          in: query
          required: true
          description: location_status (location_status=)
          schema:
            type : string
            minimum: 1  
  /devices/smss/invite:
    post:
      tags:
      - Devices  
      summary: SendInviteRequest
      parameters:
        - $ref: '#/parameters/DeviceId'
        - $ref: '#/parameters/message'
        - $ref: '#/parameters/info'
  /devices/connection_type:
    post:
      tags:
      - Devices  
      summary: SetDeviceConnectionTypeRequest
      parameters:
        - $ref: '#/parameters/info'
        - $ref: '#/parameters/DeviceId'
        - name: connection_type
          in: query
          required: true
          description: connection_type (connection_type=)
          schema:
            type : string
            minimum: 1
    get:
      tags:
      - Devices  
      summary: GetDeviceConnectionTypeRequest
      parameters:
        - $ref: '#/parameters/DeviceId'                                                                                                   
        #-------------- Admins ------------
  /admins:
    post:
      tags:
      - Admins  
      summary: AddAdminRequest
      parameters:
        - name: key
          in: query
          required: true
          description: Super Admin Key (?key=)
          schema:
            type : string
            minimum: 1
        - name: admin_name
          in: query
          required: true
          description: Admin Name (&admin_name=)
          schema:
            type : string
            minimum: 1
        - name: admin_password
          in: query
          required: true
          description: Admin Password (&admin_password=)
          schema:
            type : string
            minimum: 1            
  /admins/configurations/configuration:
    get:
      tags:
      - Admins  
      summary: GetAdminConfigurationRequest
      parameters:
        - $ref: '#/parameters/AdminAK'
  /admins/configurations:
    post:
      tags:
      - Admins  
      summary: SetAdminConfigurationRequest
      parameters:
        - $ref: '#/parameters/AdminAK'
        - name: admin_configuration
          in: body
          required: true
          description: Admin Configuration
          schema:
            type : string
            minimum: 1 
  /admins/billing/packages:
    get:
      tags:
      - Admins  
      summary: GetPackagesRequest
      parameters:
        - $ref: '#/parameters/AdminAK'
  /admins/accounts/status:
    put:
      tags:
      - Admins  
      summary: ChangeAccountStatusRequest
      parameters:
        - $ref: '#/parameters/AAccessKey'
        - $ref: '#/parameters/AccountEmail'
        - name: account_status
          in: query
          required: true
          description: Admin Status (&admin_status=)
          schema:
            type : string
            minimum: 1
    get:
      tags:
      - Admins  
      summary: GetAccountStatusRequest
      parameters:
        - $ref: '#/parameters/AAccessKey'
        - $ref: '#/parameters/AccountEmail'
  /admins/billing/plans:
    post:
      tags:
      - Admins  
      summary: CreatePlanRequest
      parameters:
        - $ref: '#/parameters/AdminAK' 
        - $ref: '#/parameters/PlanName'
        - name: plan_codes
          in: query
          required: true
          description: Plan Codes (&plan_codes=)
          schema:
            type : string
            minimum: 1 
    get:
      tags:
      - Admins  
      summary: GetPlansRequest
      parameters:
        - $ref: '#/parameters/AAccessKey'
  /admins/domains/billing/plans:
    put:
      tags:
      - Admins  
      summary: AssignPlanRequest
      parameters:
        - $ref: '#/parameters/AAccessKey'
        - name: account_api_key
          in: query
          required: true
          description: Account Api Key (&account_api_key=)
          schema:
            type : string
            minimum: 1 
        - $ref: '#/parameters/DomainName'
        - $ref: '#/parameters/PlanName' 
  /admins/domains/billing/plans/switch:
    put:
      tags:
      - Admins  
      summary: SwitchPlanRequest
      parameters:
        - $ref: '#/parameters/AAccessKey'
        - name: account_api_key
          in: query
          required: true
          description: Account Api Key (&account_api_key=)
          schema:
            type : string
            minimum: 1
        - $ref: '#/parameters/DomainName'
        - $ref: '#/parameters/PlanName' 
        - name: switch_package_id
          in: query
          required: true
          description: Switch Package Id (&switch_package_id=)
          schema:
            type : string
            minimum: 1 
  /admins/domains/billing/plans/active:
    get:
      tags:
      - Admins  
      summary: GetDomainActivePlansStatusRequest
      parameters:
        - $ref: '#/parameters/AAccessKey'
        - name: account_api_key
          in: query
          required: true
          description: Account Api Key (&account_api_key=)
          schema:
            type : string
            minimum: 1
        - $ref: '#/parameters/DomainName'
  /admins/billing/rates:
    post:
      tags:
      - Admins  
      summary: CreateRateTableRequest
      parameters:
        - $ref: '#/parameters/AAccessKey'
        - name: rates
          in: query
          required: true
          description: Rates (&rates=)
          schema:
            type : string
            minimum: 1
        - name: rate_table_name
          in: query
          required: true
          description: Rate Table Name (&name=)
          schema:
            type : string
            minimum: 1
    get:
      tags:
      - Admins  
      summary: CreateRateTableRequest
      parameters:
        - $ref: '#/parameters/AAccessKey'
  /admins/accounts:
    get:
      tags:
      - Admins  
      summary: GetAccountListRequest
      parameters:
        - $ref: '#/parameters/AdminAK'
    post:
      tags:
      - Admins  
      summary: RegisterAccountRequest
      parameters:
        - $ref: '#/parameters/AdminAK'
        - $ref: '#/parameters/AccountEmail'
        - name: account_password
          in: query
          required: true
          description: Account Password (&account_password=)
          schema:
            type : string
            minimum: 1
    delete:
      tags:
      - Admins  
      summary: UnregisterAccountRequest
      parameters:
        - $ref: '#/parameters/AdminAK'
        - $ref: '#/parameters/AAK'
            
  /admins/accounts/accessTokens:
    delete:
      tags:
      - Admins  
      summary: RevokeAccountAccessTokenRequest
      parameters:
        - $ref: '#/parameters/AAT'
  /admins/accounts/configurations:
    post:
      tags:
      - Admins  
      summary: SetAccountConfigurationRequest
      parameters:
        - $ref: '#/parameters/AccountEmail'
        - name: account_configuration
          in: query
          required: true
          description: Account Configuration (&account_configuration=)
          schema:
            type : string
            minimum: 1
    get:
      tags:
      - Admins  
      summary: GetAccountConfigurationRequest
      parameters:
        - $ref: '#/parameters/AccountEmail'
  /admins/domains/configurations:
    post:
      tags:
      - Admins  
      summary: SetDomainConfigurationRequest
      parameters:
        - name: domain_configuration
          in: query
          required: true
          description: Domain Configuration
          schema:
            type : string
            minimum: 1
  /admins/domains/configurations/configuration:
    get:
      tags:
      - Admins  
      summary: GetDomainConfigurationRequest
      parameters:
  /admins/domains/configurations/route:
    post:
      tags:
      - Admins  
      summary: SetDomainConfigurationRouteRequest
      parameters:
    get:
      tags:
      - Admins  
      summary: GetDomainConfigurationRouteRequest
      parameters:
  /admins/domains/configurations/communications/spidr:
    post:
      tags:
      - Admins  
      summary: GetDomainSpidrConfigurationRequest
      parameters:
  /admins/accounts/details:
    get:
      tags:
      - Admins  
      summary: GetAccountDetailsRequest
      parameters:
        - $ref: '#/parameters/AAK'
  /admins/billing/codes:
    get:
      tags:
      - Admins  
      summary: GetCodeListRequest
      parameters:
        - $ref: '#/parameters/AdminAK'
    post:
      tags:
      - Admins  
      summary: SetCodeListRequest
      parameters:
        - $ref: '#/parameters/AdminAK'
        - name: code_list
          in: query
          required: true
          description: Code List
          schema:
            type : string
            minimum: 1
  /admins/oauth/tokens:
    get:
      tags:
      - Admins  
      summary: GetOAuthTokenRequest
      parameters:
        - $ref: '#/parameters/AdminAK'
        - $ref: '#/parameters/OAK'
        - $ref: '#/parameters/OAS'
  /admins/domains/users:
    get:
      tags:
      - Admins  
      summary: GetDomainUserListRequest
      parameters:
        - $ref: '#/parameters/AdminAK'
        - $ref: '#/parameters/DAT'
  /admins/domains/users/accesstokens:
    get:
      tags:
      - Admins  
      summary: GetUserAccessTokenByUserAndDomainRequest
      parameters:
        - $ref: '#/parameters/UserId'
        - $ref: '#/parameters/DomainName'
  /admins/domains/exists:
    get:
      tags:
      - Admins  
      summary: CheckAvailableDomainNameRequest
      parameters:
        - $ref: '#/parameters/DomainName'
  /admins/domains/resources:
    get:
      tags:
      - Admins  
      summary: GetDomainResourcesRequest
      parameters:
        - $ref: '#/parameters/DomainName'
    put:
      tags:
      - Admins  
      summary: IncreaseDomainResourcesRequest
      parameters:
        - $ref: '#/parameters/DomainName'
  /admins/domains/otp:
    get:
      tags:
      - Admins  
      summary: GetUserOtpsRequest
      parameters:
  /admins/domains/fastcall:
    put:
      tags:
      - Admins  
      summary: EnableDomainFastCallRequest
      parameters:
        - $ref: '#/parameters/DAT'
    ## DSK
  /admins/domain_special_keys:
    post:
      tags:
      - Admins  
      summary: RegisterDomainSpecialKeyRequest
      parameters:
        - $ref: '#/parameters/DSK'
    get:
      tags:
      - Admins  
      summary: GetRegisteredDomainSpecialKeysRequest
      parameters:
       # - $ref: '#/parameters/DSK'
    delete:
      tags:
      - Admins  
      summary: UnregisterDomainSpecialKeyRequest
      parameters:
        - $ref: '#/parameters/DSK'
      ## DSK

      ## Application Configuration
  /admins/applications/configurations:
    post:
      tags:
      - Admins  
      summary: SetApplicationConfigurationRequest
      parameters:
        - name: application_configuration
          in: query
          required: true
          description: Application Configuration  
          schema:
            type: string
            minumum: 1
        - $ref: '#/parameters/DSK'
  /admins/applications/configurations/configuration:
    get:
      tags:
      - Admins  
      summary: GetApplicationConfigurationRequest
      parameters:
        - $ref: '#/parameters/DSK'
      ## Application Configuration 

      ## // billing 
  /admins/billing/packages:
    get:
      tags:
      - Admins  
      summary: GetPackagesRequest
      parameters:
        - name: key
          in: query
          required: true
          description: Admin Key (?key=)
          schema:
            type: string
            minumum: 1
            ## // billing 

            ## // misc
  /admins/users/anonymous:
    delete:
      tags:
      - Admins  
      summary: DeleteAnonymousUserRequest
      parameters:
        - $ref: '#/parameters/UAT'
  /admins/sessions/session/id:
    delete:
      tags:
      - Admins  
      summary: DeleteSessionRequest
      parameters:
        - name: session_id
          in: query
          required: true
          description: Session ID (?session_id=)
          schema:
            type: string
            minumum: 1
             ## // misc

             ## // reports
  /admins/general_report:
    post:
      tags:
      - Admins  
      summary: GeneralReportRequest
      parameters:

  /admins/reports/count/apis/24h:
    get:
      tags:
      - Admins  
      summary: GetApiCallCountInLast24HRequest
      parameters:
        - name: api_name
          in: query
          required: true
          description: Api Name (?api_name=)
          schema:
            type: string
            minumum: 1
  /admins/reports/data/apis/24h:
    get:
      tags:
      - Admins  
      summary: GetApiCallDataInLast24HRequest
      parameters:
        - name: api_name
          in: query
          required: true
          description: Api Name (?api_name=)
          schema:
            type: string
            minumum: 1                                                                                                                      
parameters:
  AAK:
    name: key
    in: query
    required: true
    description: Account Api Key (?key=)
    schema:
      type: string
      minumum: 1
  AAS:
    name: account_api_secret
    in: query
    required: true
    description: Account Api Secret (&account_api_secret=)
    schema:
      type: string
      minumum: 1 
  AAT:
    name: key
    in: query
    required: true
    description: Account Access Token (?key=)
    schema:
      type: string
      minumum: 1
  DomainName:
    name: domain_name
    in: query
    required: true
    description: Domain Name (&domain_name=)
    schema:
      type: string
      minumum: 1 
  DAK:
    name: domain_api_key
    in: query
    required: true
    description: Domain Api Key (&domain_api_key=)
    schema:
      type: string
      minumum: 1  
  DAT:
    name: domain_access_token
    in: query
    required: true
    description: Domain Access Token (&domain_access_token=)
    schema:
      type: string
      minumum: 1
  DATKey:
    name: key
    in: query
    required: true
    description: Domain Access Token (?key=)
    schema:
      type: string
      minumum: 1 
  UAK:
    name: user_api_key
    in: query
    required: true
    description: User Api Key (&user_api_key=)
    schema:
      type: string
      minumum: 1 
  UAT:
    name: user_access_token
    in: query
    required: true
    description: User Access Token (&user_access_token=)
    schema:
      type: string
      minumum: 1 
  UATKey:
    name: key
    in: query
    required: true
    description: User Access Token (?key=)
    schema:
      type: string
      minumum: 1                                                     
  DAKKey:
    name: key
    in: query
    required: true
    description: Domain Api Key (?key=)
    schema:
      type: string
      minumum: 1 
  DeviceList:
    name: Device
    in: body
    required: true
    description: User Api Key (?key=)
    schema:
      type: device_native_id,device_family,device_name,device_os_version
      minumum: 1  
  DeviceId:
    name: device_id
    in: query
    required: true
    description: Device Id (?device_id=)
    schema:
      type: string
      minumum: 1 
  AdminAK:
    name: key
    in: query
    required: true
    description: Admin Api Key (?key=)
    schema:
      type: string
      minumum: 1 
  AAccessKey:
    name: key
    in: query
    required: true
    description: Admin Access Key (?key=)
    schema:
      type: string
      minumum: 1 
  PlanName:
    name: plan_name
    in: query
    required: true
    description: Plan Name (&plan_name=)
    schema:
      type: string
      minumum: 1 
  UserId:
    name: user_id
    in: query
    required: true
    description: User Id (&user_id=)
    schema:
      type: string
      minumum: 1  
  DomainNameName:
    name: name
    in: query
    required: true
    description: Domain Name (?name=)
    schema:
      type: string
      minumum: 1 
  DAS:
    name: domain_api_secret
    in: query
    required: true
    description: Domain Api Secret (?domain_api_secret=)
    schema:
      type: string
      minumum: 1 
  UAS:
    name: user_api_secret
    in: query
    required: true
    description: Domain Api Secret (?user_api_secret=)
    schema:
      type: string
      minumum: 1
  DSK:
    name: domain_special_key
    in: query
    required: true
    description: Domain Special Key (?domain_special_key=)
    schema:
      type: string
      minumum: 1
  OAK:
    name: oauth_key
    in: query
    required: true
    description: Oauth Key (?oauth_key=)
    schema:
      type: string
      minumum: 1
  OAS:
    name: oauth_secret
    in: query
    required: true
    description: Oauth Secret (?oauth_secret=)
    schema:
      type: string
      minumum: 1 
  message:
    name: message
    in: body
    required: true
    description: Message
    schema:
      type: string
      minumum: 1
  info:
    name: info
    in: query
    required: true
    description: domain_name,user_id (info.domain_name=, info.user_id)
    schema:
      type: object
      required:
        - "domain_name"
        - "user_id"
      properties:
        domain_name:
          type: string
        user_id:
          type: string 
  AccountEmail:
    name: Account Email
    in: body
    required: true
    description: Email
    schema:
      type: object
      minumum: 1
      properties:
        account_email:
          type: user@kandy.io
                     



